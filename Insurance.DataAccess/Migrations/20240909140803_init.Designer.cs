// <auto-generated />
using System;
using Insurance.DataAccess.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Insurance.DataAccess.Migrations
{
    [DbContext(typeof(InsuranceDbContext))]
    [Migration("20240909140803_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Insurance.Domain.Entities.InsuranceCoverage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CoverageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MaximumAmount")
                        .HasColumnType("float");

                    b.Property<double>("MinimumAmount")
                        .HasColumnType("float");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Coverages");
                });

            modelBuilder.Entity("Insurance.Domain.Entities.InsuranceCoverageDemand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CoverageId")
                        .HasColumnType("int");

                    b.Property<int?>("InsuranceDemandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoverageId");

                    b.HasIndex("InsuranceDemandId");

                    b.ToTable("InsuranceCoverageDemand");
                });

            modelBuilder.Entity("Insurance.Domain.Entities.InsuranceDemand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalPremium")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Demands");
                });

            modelBuilder.Entity("Insurance.Domain.Entities.InsuranceCoverageDemand", b =>
                {
                    b.HasOne("Insurance.Domain.Entities.InsuranceCoverage", "Coverage")
                        .WithMany()
                        .HasForeignKey("CoverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Insurance.Domain.Entities.InsuranceDemand", null)
                        .WithMany("Coverages")
                        .HasForeignKey("InsuranceDemandId");

                    b.Navigation("Coverage");
                });

            modelBuilder.Entity("Insurance.Domain.Entities.InsuranceDemand", b =>
                {
                    b.Navigation("Coverages");
                });
#pragma warning restore 612, 618
        }
    }
}
